name: SonarCloud
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install dotnet-coverage
        run: |
          dotnet tool install --global dotnet-coverage
          dotnet tool list --global
          dotnet-coverage --version
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          echo "MYSECRET="${{ secrets.MYSECRET }}"" >> $GITHUB_ENV
          echo "NEO4J_CONN="${{ secrets.NEO4J_CONN }}"" >> $GITHUB_ENV
          echo "NEO4J_USER="${{ secrets.NEO4J_USER }}"" >> $GITHUB_ENV
          echo "NEO4J_PASSWORD="${{ secrets.NEO4J_PASSWORD }}"" >> $GITHUB_ENV
          echo "MYSQL_READ="${{ secrets.MYSQL_READ }}"" >> $GITHUB_ENV
          echo "MYSQL_WRITE="${{ secrets.MYSQL_WRITE }}"" >> $GITHUB_ENV
          echo "MYSQL_READWRITE="${{ secrets.MYSQL_READWRITE }}"" >> $GITHUB_ENV
          echo "MYSQL_ADMIN="${{ secrets.MYSQL_ADMIN }}"" >> $GITHUB_ENV
          echo "MONGODB_CONN="${{ secrets.MONGODB_CONN }}"" >> $GITHUB_ENV
          echo "JWT_ISSUER="${{ secrets.JWT_ISSUER }}"" >> $GITHUB_ENV
          echo "JWT_AUDIENCE="${{ secrets.JWT_AUDIENCE }}"" >> $GITHUB_ENV
          echo "JWT_KEY="${{ secrets.JWT_KEY }}"" >> $GITHUB_ENV
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"DrengeneFraKEA_HMS-public" /o:"drengenefrakea" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml
          dotnet build
          dotnet-coverage collect 'dotnet test' -f xml  -o 'coverage.xml'
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
